generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String
  passwordHash String   @map("password_hash")
  createdAt    DateTime @default(now()) @map("created_at")

  // Relations
  ledLobbies     Lobby[]         @relation("LobbyLeader")
  lobbyMembers   LobbyMember[]
  transactions   Transaction[]
  transactionDetails TransactionDetail[]

  @@map("users")
}

model Lobby {
  id             Int      @id @default(autoincrement())
  name           String
  leaderId       Int      @map("leader_id")
  totalBalance   Decimal  @default(0) @map("total_balance") @db.Decimal(10, 2)
  initialDeposit Decimal  @default(0) @map("initial_deposit") @db.Decimal(10, 2)
  status         String   @default("active")
  inviteCode     String?  @unique @map("invite_code")
  createdAt      DateTime @default(now()) @map("created_at")

  // Relations
  leader       User            @relation("LobbyLeader", fields: [leaderId], references: [id], onDelete: Cascade)
  members      LobbyMember[]
  transactions Transaction[]

  @@map("lobbies")
}

model LobbyMember {
  id                Int      @id @default(autoincrement())
  lobbyId           Int      @map("lobby_id")
  userId            Int      @map("user_id")
  individualBalance Decimal  @default(0) @map("individual_balance") @db.Decimal(10, 2)
  totalDeposited    Decimal  @default(0) @map("total_deposited") @db.Decimal(10, 2)
  joinedAt          DateTime @default(now()) @map("joined_at")

  // Relations
  lobby Lobby @relation(fields: [lobbyId], references: [id], onDelete: Cascade)
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([lobbyId, userId])
  @@map("lobby_members")
}

model Transaction {
  id          Int      @id @default(autoincrement())
  lobbyId     Int      @map("lobby_id")
  createdBy   Int      @map("created_by")
  type        String   // 'deposit', 'expense_equal', 'expense_individual'
  description String
  totalAmount Decimal  @map("total_amount") @db.Decimal(10, 2)
  createdAt   DateTime @default(now()) @map("created_at")

  // Relations
  lobby   Lobby               @relation(fields: [lobbyId], references: [id], onDelete: Cascade)
  creator User                @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  details TransactionDetail[]

  @@map("transactions")
}

model TransactionDetail {
  id            Int     @id @default(autoincrement())
  transactionId Int     @map("transaction_id")
  userId        Int     @map("user_id")
  amount        Decimal @db.Decimal(10, 2)

  // Relations
  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("transaction_details")
}
